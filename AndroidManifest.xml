<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="fanfan.business.app"
    android:versionCode="2"
    android:versionName="1.3.3">
    <uses-sdk
        android:minSdkVersion="8"
        android:targetSdkVersion="21" />
	
    <!-- 【必须】 信鸽SDK所需权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <!-- 【可选】 信鸽SDK所需权限 -->
	<uses-permission android:name="android.permission.RESTART_PACKAGES" />
	<uses-permission android:name="android.permission.BROADCAST_STICKY" />
	<uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES" />
	<uses-permission android:name="android.permission.GET_TASKS" />
	<uses-permission android:name="android.permission.READ_LOGS" />
    
    <!-- 蓝牙权限 -->
    <uses-permission android:name="android.permission.BLUETOOTH"/>
	<uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
	<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
	<!-- 相机权限 -->
	<uses-permission android:name="android.permission.CAMERA" />
	<!-- 扫码 -->
	<uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
    <uses-feature android:name="android.hardware.camera.flash" android:required="false" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <application
        android:name="fanfan.app.view.Application"
        android:allowBackup="false"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity android:name="fanfan.app.view.cutimg.ClipImageActivity" />
        <activity android:name="fanfan.app.view.MainActivity" />
        <activity
            android:name="fanfan.app.view.WebViewActivity"
            android:launchMode="singleTask"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
  		<activity android:name="fanfan.app.view.ScanActivity" />
  		
  		
  		
  		<!-- 前置通知栏 -->
        <service android:name="fanfan.app.service.ForegroundService" android:exported="true" android:enabled="true"></service>
        <!-- 前置通知广播 -->
        <receiver android:name="fanfan.app.receiver.ForegroundReceiver" android:exported="true">
            <intent-filter >
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        
        <!-- 网络变化广播 -->
        <receiver
	        android:name="fanfan.app.receiver.NetworkChangedReceiver">
	        <intent-filter>
	            <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
	        </intent-filter>
		</receiver>
  		
  		
  		
        <!--信鸽推送-->
        <!-- 【必须】 信鸽receiver广播接收 -->
        <receiver
            android:name="com.tencent.android.tpush.XGPushReceiver"
            android:process=":xg_service_v4" >
           <intent-filter android:priority="0x7fffffff" >

                <!-- 【必须】 信鸽SDK的内部广播 -->
                <action android:name="com.tencent.android.tpush.action.SDK" />
                <action android:name="com.tencent.android.tpush.action.INTERNAL_PUSH_MESSAGE" />
                <!-- 【必须】 系统广播：网络切换 -->
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />

                <!-- 【可选】 系统广播：开屏 -->
                <action android:name="android.intent.action.USER_PRESENT" />

                <!-- 【可选】 一些常用的系统广播，增强信鸽service的复活机会，请根据需要选择。当然，你也可以添加APP自定义的一些广播让启动service -->
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
                
                <!-- 自定义广播启动信鸽服务 -->
                <action android:name="fanfan.business.app.foregound.alarm.action" />
                <action android:name="fanfan.business.app.foregound.click.action" />
            </intent-filter>
            
	         <!-- 【可选】 usb相关的系统广播，增强信鸽service的复活机会，请根据需要添加 -->
	         <intent-filter android:priority="0x7fffffff" >
	             <action android:name="android.intent.action.MEDIA_UNMOUNTED" />
	             <action android:name="android.intent.action.MEDIA_REMOVED" />
	             <action android:name="android.intent.action.MEDIA_CHECKING" />
	             <action android:name="android.intent.action.MEDIA_EJECT" />
	             <data android:scheme="file" />
	         </intent-filter>
        </receiver>

        <!-- 【可选】APP实现的Receiver，用于接收消息透传和操作结果的回调，请根据需要添加 -->
        <!-- YOUR_PACKAGE_PATH.CustomPushReceiver需要改为自己的Receiver： -->
        <receiver
            android:name="fanfan.app.msg.receiver.XGMessageReceiver"
            android:exported="true" >
            <intent-filter>
                <!-- 接收消息透传 -->
                <action android:name="com.tencent.android.tpush.action.PUSH_MESSAGE" />
                <!-- 监听注册、反注册、设置/删除标签、通知被点击等处理结果 -->
                <action android:name="com.tencent.android.tpush.action.FEEDBACK" />
            </intent-filter>
        </receiver>


        
        <!-- 【注意】 如果被打开的activity是启动模式为SingleTop，SingleTask或SingleInstance，请根据通知的异常自查列表第8点处理 -->
        <activity
            android:name="com.tencent.android.tpush.XGPushActivity"
            android:exported="false" >
            <intent-filter>

                <!-- 若使用AndroidStudio，请设置android:name="android.intent.action" -->
                <action android:name="" />
            </intent-filter>
        </activity>

        <!-- 【必须】 信鸽service -->
        <service
            android:name="com.tencent.android.tpush.service.XGPushServiceV4"
            android:exported="true"
            android:persistent="true"
            android:process=":xg_service_v4" />

        <!-- 【必须】 提高service的存活率 -->
        <service
            android:name="com.tencent.android.tpush.rpc.XGRemoteService"
            android:exported="true" >
            <intent-filter>
                <!-- 【必须】 请修改为当前APP包名 .PUSH_ACTION, 如demo的包名为：com.qq.xgdemo -->
                <action android:name="fanfan.business.app.PUSH_ACTION" />
            </intent-filter>
        </service>
        


        <service
        android:name="com.inuker.bluetooth.library.BluetoothService" />
        
        <!-- 【必须】 【注意】authorities修改为 包名.AUTH_XGPUSH, 如demo的包名为：com.qq.xgdemo -->
        <provider
            android:name="com.tencent.android.tpush.XGPushProvider"
            android:authorities="fanfan.business.app.AUTH_XGPUSH"
            android:exported="true" />

        <!-- 【必须】 【注意】authorities修改为 包名.TPUSH_PROVIDER, 如demo的包名为：com.qq.xgdemo -->
        <provider
            android:name="com.tencent.android.tpush.SettingsContentProvider"
            android:authorities="fanfan.business.app.TPUSH_PROVIDER"
            android:exported="false" />

        <!-- 【必须】 【注意】authorities修改为 包名.TENCENT.MID.V3, 如demo的包名为：com.qq.xgdemo -->
        <provider
            android:name="com.tencent.mid.api.MidProvider"
            android:authorities="fanfan.business.app.TENCENT.MID.V3"
            android:exported="true" >
        </provider>

        <!-- 【必须】 请将YOUR_ACCESS_ID修改为APP的AccessId，“21”开头的10位数字，中间没空格2100311367  -->
        <meta-data
            android:name="XG_V2_ACCESS_ID"
            android:value="2100311367" />
        <!-- 【必须】 请将YOUR_ACCESS_KEY修改为APP的AccessKey，“A”开头的12位字符串，中间没空格A4V73CJGS57A -->
        <meta-data
            android:name="XG_V2_ACCESS_KEY"
            android:value="AA29W5C2B3JK" />
        
        
        <!-- 信鸽厂商通道 -->
        
         <!-- 注：华为push 需要的 begin -->
        <meta-data
        android:name="com.huawei.hms.client.appid"
        android:value="100489645" >
        </meta-data>

        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <provider
            android:name="com.huawei.hms.update.provider.UpdateProvider"
            android:authorities="fanfan.business.app.hms.update.provider"
            android:exported="false"
            android:grantUriPermissions="true" >
        </provider>

        <receiver android:name="com.huawei.hms.support.api.push.PushEventReceiver" >
            <intent-filter>
                <!-- 接收通道发来的通知栏消息，兼容老版本PUSH -->
                <action android:name="com.huawei.intent.action.PUSH" />
            </intent-filter>
        </receiver>

          <!-- xxx.xx.xx为CP自定义的广播名称，比如: com.huawei.hmssample. HuaweiPushRevicer -->
        <receiver android:name="com.tencent.otherpush.receiver.HwReceiver" >
            <intent-filter>
                <!-- 必须,用于接收TOKEN -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                <!-- 必须，用于接收消息 -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
                <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 -->
                <action android:name="com.huawei.android.push.intent.CLICK" />
                <!-- 可选，查看PUSH通道是否连接，不查看则不需要 -->
                <action android:name="com.huawei.intent.action.PUSH_STATE" />
            </intent-filter>
        </receiver>
		<!-- 华为push 需要的end -->
        
        
         <!-- 云控相关 -->
        <receiver
            android:name="com.tencent.android.tpush.cloudctr.network.CloudControlDownloadReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.tencent.android.tpush.cloudcontrol.action.DOWNLOAD_FILE_FINISH" />
            </intent-filter>
        </receiver>
        <service
            android:name="com.tencent.android.tpush.cloudctr.network.CloudControlDownloadService"
            android:exported="true"
            android:persistent="true" />
        <!-- 云控相关 - 完 -->

        
        
    </application>

</manifest>
